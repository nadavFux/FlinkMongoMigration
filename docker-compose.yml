services:
  # MongoDB with optimized settings for large datasets
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: flink_db
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo:/docker-entrypoint-initdb.d
    # Optimized MongoDB configuration for large datasets
    command: >
      mongod 
      --wiredTigerCacheSizeGB 2
      --wiredTigerCollectionBlockCompressor snappy
      --wiredTigerIndexPrefixCompression true
      --logpath /var/log/mongodb/mongod.log
      --bind_ip_all
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    networks:
      - flink-network

  # Flink JobManager with increased resources
  jobmanager:
    image: flink:1.18.0-scala_2.12-java11
    container_name: flink-jobmanager
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        jobmanager.memory.process.size: 2048m
        jobmanager.memory.heap.size: 1024m
        parallelism.default: 8
        taskmanager.memory.process.size: 4096m
        taskmanager.memory.flink.size: 3072m
        taskmanager.memory.managed.fraction: 0.4
        taskmanager.memory.network.fraction: 0.1
        taskmanager.numberOfTaskSlots: 4
        state.backend: filesystem
        state.checkpoints.dir: file:///opt/flink/checkpoints
        state.savepoints.dir: file:///opt/flink/savepoints
        execution.checkpointing.interval: 30000
        execution.checkpointing.mode: EXACTLY_ONCE
        execution.checkpointing.min-pause: 5000
        execution.checkpointing.max-concurrent-checkpoints: 1
        execution.checkpointing.externalized-checkpoint-retention: RETAIN_ON_CANCELLATION
        # Optimizations for large datasets
        table.exec.source.idle-timeout: 30s
        pipeline.max-parallelism: 128
        rest.flamegraph.enabled: true
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.host: localhost
        metrics.reporter.prom.port: 9249
    volumes:
      - flink_data:/opt/flink/data
      - flink_checkpoints:/opt/flink/checkpoints
      - flink_savepoints:/opt/flink/savepoints
      - ./FlinkMongoMigration/target:/opt/flink/usrlib
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    networks:
      - flink-network

  # Multiple Flink TaskManagers for parallel processing
  taskmanager1:
    image: flink:1.18.0-scala_2.12-java11
    container_name: flink-taskmanager-1
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.rpc.port: 6122
        taskmanager.memory.process.size: 4096m
        taskmanager.memory.flink.size: 3072m
        taskmanager.memory.managed.fraction: 0.4
        taskmanager.memory.network.fraction: 0.1
        taskmanager.numberOfTaskSlots: 4
        # JVM optimizations for large datasets
        env.java.opts: "-XX:+UseG1GC -XX:G1HeapRegionSize=16m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    volumes:
      - flink_data:/opt/flink/data
      - flink_checkpoints:/opt/flink/checkpoints
      - flink_savepoints:/opt/flink/savepoints
      - ./FlinkMongoMigration/target:/opt/flink/usrlib
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    networks:
      - flink-network

  taskmanager2:
    image: flink:1.18.0-scala_2.12-java11
    container_name: flink-taskmanager-2
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.rpc.port: 6123
        taskmanager.memory.process.size: 4096m
        taskmanager.memory.flink.size: 3072m
        taskmanager.memory.managed.fraction: 0.4
        taskmanager.memory.network.fraction: 0.1
        taskmanager.numberOfTaskSlots: 4
        env.java.opts: "-XX:+UseG1GC -XX:G1HeapRegionSize=16m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    volumes:
      - flink_data:/opt/flink/data
      - flink_checkpoints:/opt/flink/checkpoints
      - flink_savepoints:/opt/flink/savepoints
      - ./FlinkMongoMigration/target:/opt/flink/usrlib
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    networks:
      - flink-network

  # MongoDB Express (Web UI for MongoDB)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: mongo-express
    restart: always
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - flink-network

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - flink-network
    profiles:
      - monitoring

networks:
  flink-network:
    driver: bridge

volumes:
  mongodb_data:
  flink_data:
  flink_checkpoints:
  flink_savepoints: